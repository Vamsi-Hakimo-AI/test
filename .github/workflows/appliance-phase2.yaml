name: Trigger Jenkins Appliance Phase 2 job

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  trigger-phase2:
    if: >
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.title, 'Automated PR') &&
      contains(github.event.pull_request.labels.*.name, 'chore') &&
      startsWith(github.event.pull_request.head.ref, 'deployment/appliance/')
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          separator: "\n"

      - name: Check for hip-motion file changes
        id: check-hip-files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == tenants/*/hip-motion/kustomization.yaml || "$file" == tenants/*/hip-motion/hip-values.yaml ]]; then
              echo "MATCH_FOUND=true" >> $GITHUB_ENV
              exit 0
            fi
          done
          echo "MATCH_FOUND=false" >> $GITHUB_ENV


      - name: Extract tenant info from YAML in PR body
        if: env.MATCH_FOUND == 'true'
        run: |
          echo "${{ github.event.pull_request.body }}" > pr_body.yaml

          export TENANT_ID=$(yq '.Tenant_ID' pr_body.yaml)
          export TENANT_NAME=$(yq '.Tenant_Name' pr_body.yaml)
          export HOSTNAME_PREFIX=$(yq '.Hostname_Prefix' pr_body.yaml)

          echo "TENANT_ID=$TENANT_ID" >> $GITHUB_ENV
          echo "TENANT_NAME=$TENANT_NAME" >> $GITHUB_ENV
          echo "HOSTNAME_PREFIX=$HOSTNAME_PREFIX" >> $GITHUB_ENV

      - name: Trigger Jenkins job
        id: trigger_jenkins
        if: env.MATCH_FOUND == 'true'
        env:
          JENKINS_URL: ${{ vars.JENKINS_URL }}
          JENKINS_USER: ${{ vars.JENKINS_USER }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
        run: |
          echo "Triggering Jenkins job"
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$JENKINS_URL/view/all/job/trigger-phase3-test/buildWithParameters" \
            --user "$JENKINS_USER:$JENKINS_API_TOKEN" \
            --data "Tenant_ID=$TENANT_ID" \
            --data "Tenant_Name=$TENANT_NAME" \
            --data "Hostname_Prefix=$HOSTNAME_PREFIX")

          echo "Jenkins returned HTTP $HTTP_CODE"

          if [[ "$HTTP_CODE" -ne 201 ]]; then
            echo "Jenkins job trigger failed"
            exit 1
          fi

      - name: Send Slack Message on Jenkins Phase 2 Trigger Failure
        if: failure() && steps.trigger_jenkins.outcome == 'failure'
        uses: prakritish/slack-notification@v2
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel: ${{ env.SLACK_CHANNEL }}
          result: "FAIL"
          username: "GithubAction"
          message: "Failed to trigger Appliance Phase 2 Jenkins job for Tenant ID - ${{ env.TENANT_ID }} ."
          fields: |
            Job URL:${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Result: Failure
            Triggered By: ${{ github.actor }}









  