name: Trigger Jenkins Appliance Phase 2 job

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  trigger-phase2:
    if: >
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.title, 'automated-pr') &&
      contains(github.event.pull_request.labels.*.name, 'chore') &&
      startsWith(github.event.pull_request.head.ref, 'deployment/appliance/')
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          separator: "\n"

      - name: Check for hip-motion file changes
        id: check-hip-files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == tenants/*/hip-motion/kustomization.yaml || "$file" == tenants/*/hip-motion/hip-values.yaml ]]; then
              echo "MATCH_FOUND=true" >> $GITHUB_ENV
              exit 0
            fi
          done
          echo "MATCH_FOUND=false" >> $GITHUB_ENV

      - name: Extract tenant info from JSON in PR body
        if: env.MATCH_FOUND == 'true'
        id: extract-tenant-json
        run: |
          echo '${{ github.event.pull_request.body }}' > pr_body.json

          TENANT_ID=$(jq '.Tenant_ID' pr_body.json)
          TENANT_NAME=$(jq '.Tenant_Name' pr_body.json)
          HOSTNAME_PREFIX=$(jq '.Hostname_Prefix' pr_body.json)

          echo "Tenant_ID: $TENANT_ID"
          echo "Tenant_Name: $TENANT_NAME"
          echo "Hostname_Prefix: $HOSTNAME_PREFIX"

          echo "TENANT_ID=$TENANT_ID" >> $GITHUB_ENV
          echo "TENANT_NAME=$TENANT_NAME" >> $GITHUB_ENV
          echo "HOSTNAME_PREFIX=$HOSTNAME_PREFIX" >> $GITHUB_ENV

      - name: Trigger Jenkins job
        if: env.MATCH_FOUND == 'true'
        env:
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
        run: |
          echo "Triggering Jenkins job with parameters from PR body..."
          curl -X POST "$JENKINS_URL/view/all/job/trigger-phase2-test/buildWithParameters" \
            --user "$JENKINS_USER:$JENKINS_API_TOKEN" \
            --data "Tenant_ID=$TENANT_ID" \
            --data "Tenant_Name=$TENANT_NAME" \
            --data "Hostname_Prefix=$HOSTNAME_PREFIX"



        